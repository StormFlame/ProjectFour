{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/AddCarForm/AddCarForm.jsx","utils/car-api.js","components/CarCard/CarCard.jsx","components/CarGrid/CarGrid.jsx","components/Header/Header.jsx","pages/Dashboard/Dashboard.jsx","utils/performanceUpgradesService.js","utils/service-api.js","components/UpdateCarForm/UpdateCarForm.jsx","components/AddServiceForm/AddServiceForm.jsx","components/ServicesTable/ServicesTable.jsx","components/AddPerformanceUpgradeForm/AddPerformanceUpgradeForm.jsx","components/PerformanceUpgradesTable/PerformanceUpgradesTable.jsx","pages/CarDetails/CarDetails.jsx","components/BubbleChart/BubbleChart.jsx","pages/ProfilePage/ProfilePage.jsx","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","signup","fetch","method","body","then","res","ok","json","Error","tokenService","logout","login","creds","headers","Headers","stringify","getUser","getProfile","username","SignUpPage","useState","invalidForm","setError","selectedFile","setSelectedFile","email","password","passwordConf","state","setState","history","useHistory","handleChange","e","target","name","value","a","key","preventDefault","formData","FormData","append","userService","handleSignUpOrLogin","push","console","log","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","Field","files","Button","disabled","LoginPage","fluid","size","Message","to","AddCarForm","makes","setMakes","models","setModels","make","model","submodel","year","getFullYear","imageURL","car","setCar","useEffect","data","appendedData","MakeName","Results","modelsURL","centered","handleAddCar","map","Model_Name","create","update","carID","getOne","getAll","deleteCar","CarCard","isProfile","Card","Content","performance","Description","_id","Image","src","undefined","onClick","CarGrid","cars","Group","PageHeader","handleLogout","clearing","floated","Dashboard","setCars","carApi","getCars","Row","width","performanceUpgrade","removePerformanceUpgrade","performanceUpgradeID","service","deleteService","serviceID","checked","setChecked","handleUpdateCar","AddServiceForm","cost","date","servicer","setService","newService","handleAddService","min","step","max","ServicesTable","services","handleDeleteService","showUpdateService","setShowUpdateService","Table","HeaderCell","Body","Cell","slice","AddPerformanceUpgradeForm","part","brand","setPerformanceUpgrade","newPerformanceUpgrade","handleAddPerformanceUpgrade","PerformanceUpgradesTable","performanceUpgrades","handleDeleteUpgrade","showUpdateUpgrade","setShowUpdateUpgrade","upgrade","CarDetails","id","useParams","showUpdateForm","setShowUpdateForm","showServicesTable","setShowServicesTable","setServices","setperformanceUpgrades","imaegURL","getCar","carForm","fullService","serviceApi","serviceId","getService","performanceUpgradesApi","performanceUpgradeId","handleShowServicesTable","show","divided","columns","Menu","pointing","secondary","Item","BubbleChart","radius","cx","cy","r","fill","ProfilePage","profileUser","setProfileUser","location","useLocation","pathname","substring","photoUrl","App","setUser","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7cc90e0c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n    if (token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction getProfile(username){\n  return fetch(BASE_URL + username, {\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken()\n    }\n  }).then(res => {\n    if(res.ok) return res.json();\n    throw new Error('Bad Credentials')\n  })\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser,\n  getProfile\n};","import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react';\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function SignUpPage(props){\n\n  const [invalidForm, setValidForm] = useState(false)\n  const [error, setError ] = useState('')\n  const [selectedFile, setSelectedFile] = useState('')\n  const [state, setState]  = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n  });\n\n  const history = useHistory()\n\n  function handleChange(e){\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  async function handleSubmit(e){\n    // add this later\n    e.preventDefault();\n\n    // Photos have to be sent over as FormData\n    // They send over the form in multiparts (multipe requests to the server)\n\n    const formData = new FormData();\n    formData.append('photo', selectedFile);\n\n\n    // generating rest of form data by looping over the state object!\n    for (let key in state){\n      formData.append(key, state[key])\n    }\n    //fyi if you log out formData you won't see anything you have to use the folllowing\n\n    // Display the key/value pairs\n    // for (var pair of formData.entries()) {\n    //   console.log(pair[0]+ ', ' + pair[1]); \n    // }\n\n    // SO now we have are data prepared to send over in our formData object\n    try {\n      // refere to the utils/userService, to look at the signup fetch function\n      await userService.signup(formData);\n      // setTheUser in our app\n      props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n      history.push('/') // defined above from react-router-dom\n      // after this we can go whereever\n\n    } catch(err){\n      console.log(err.message)\n      setError(err.message)\n    }\n\n  }\n\n  function handleFileInput(e){\n    setSelectedFile(e.target.files[0])\n  }\n \n    \n    return (\n        <>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='red' textAlign='center'>\n              </Header>            \n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment stacked>               \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input\n                      type=\"email\"                  \n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={ state.email}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={ state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={ state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Field> \n                        <Form.Input\n                          type=\"file\"\n                          name=\"photo\"\n                          placeholder=\"upload image\"\n                          onChange={handleFileInput}\n                        />      \n                    </Form.Field>\n                    <Button\n                      type=\"submit\"\n                      className=\"btn\"\n                      disabled={invalidForm}\n                    >\n                    Signup\n                  </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n               \n            </Grid.Column>\n          </Grid>\n        </>\n      );   \n}\n","import React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\nimport { useHistory, Link } from 'react-router-dom';\nimport userService from '../../utils/userService';\n\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError ] = useState('')\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n    })\n\n    const history = useHistory();\n    \n    function handleChange(e){\n      setState({\n        ...state,\n        [e.target.name]: e.target.value\n      })\n    }\n   \n    \n\n    async function handleSubmit(e){\n      e.preventDefault()\n              \n      try {\n          await userService.login(state);\n          // Route to wherever you want!\n          props.handleSignUpOrLogin()\n          history.push('/')\n          \n        } catch (err) {\n          // Invalid user data (probably duplicate email)\n          setError(err.message)\n        }\n    }\n\n    return (\n        <>\n          <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='red' textAlign='center'>\n            </Header>\n            <Form  autoComplete=\"off\"  onSubmit={handleSubmit}>\n               <Segment stacked>\n                  <Form.Input\n                    type=\"email\"\n                   \n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={ state.email}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={ state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                <Button\n                  color='red'\n                  fluid size='large'\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/signup'>Sign Up</Link>\n            </Message>\n            {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n          </Grid>\n        </>\n      );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport { Button, Form, Grid, Header, Image,  Segment, Dropdown } from 'semantic-ui-react'\n\n\nexport default function AddCarForm(props){\n    const [makes, setMakes] = useState([])\n    const [models, setModels] = useState([])\n    const [selectedFile, setSelectedFile] = useState('')\n    const [car, setCar] = useState({\n        name: '',\n        make: '',\n        model: '',\n        submodel: '',\n        year: new Date().getFullYear(),\n        imageURL: '',\n    })\n\n    useEffect(() => {\n        const carsURL = 'https://vpic.nhtsa.dot.gov/api/vehicles/GetMakesForVehicleType/car?format=json'\n\n        const makeApiCall = () => {\n            fetch(carsURL)\n                .then((res) => res.json())\n                .then((data) => {\n                    const appendedData = [{MakeName: ''}, ...data.Results]\n                    setMakes(appendedData)\n            })\n        }\n        makeApiCall()\n    }, [])\n\n    useEffect(() => {\n        if(car.make !== ''){\n            const modelsURL = `https://vpic.nhtsa.dot.gov/api/vehicles/GetModelsForMakeYear/make/${car.make}/modelyear/${car.year ? car.year : Date().year}?format=json`\n            const makeApiCall = () => {\n                fetch(modelsURL)\n                    .then((res) => res.json())\n                    .then((data) => {\n                        setModels(data.Results)\n                })\n            }\n            \n            makeApiCall()\n        }\n    }, [car])\n\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const formData = new FormData()\n        formData.append('photo', selectedFile)\n        formData.append('name', car.name)\n        formData.append('year', car.year)\n        formData.append('make', car.make)\n        formData.append('model', car.model)\n        formData.append('submodel', car.submodel)\n\n        props.handleAddCar(formData)\n    }\n\n    function handleChange(e) {\n        setCar({\n            ...car,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleFileInput(e){\n        setSelectedFile(e.target.files[0])\n      }\n\n    return(\n        <Grid centered>\n            <Grid.Column>\n                <Segment>\n                    <label>Add a Vehicle</label>\n                    <Form onSubmit={handleSubmit}>\n                        <label>Name(Optional)</label>\n                        <input onChange={handleChange} name=\"name\" type=\"text\" placeholder=\"Name\"/>\n                        <label>Year</label>\n                        <input required onChange={handleChange} name=\"year\" type=\"number\" value={car.year}/>\n                        <label>Make</label>\n                        <select required onChange={handleChange} name=\"make\" value={car.make}>\n                            {makes.map((make) => {\n                                return(<option key={make.MakeName} value={make.MakeName}>{make.MakeName}</option>)\n                                })\n                            }\n                        </select>\n                        <label>Model</label>\n                        <select required onChange={handleChange} name=\"model\" value={car.model}>\n                            {models.map((model) => {\n                                    return (<option value={model.Model_Name} key={model.Model_Name}>{model.Model_Name}</option>)\n                                })                    \n                            }\n                        </select>\n                        <label>Submodel</label>\n                        <input onChange={handleChange} name=\"submodel\" type=\"text\" placeholder=\"Submodel\"/>\n                        <label>Image(Optional)</label>\n                        <input type=\"file\" name=\"photo\" onChange={handleFileInput}/>\n                        <input required type=\"submit\" value=\"Add Car\"/>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    )\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/cars';\n\nexport function create(car){\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: car,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}\n\nexport function update(car, carID){\n    return fetch(`${BASE_URL}/${carID}`, {\n        method: 'PUT',\n        body: car,\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json())\n}\n\nexport function getOne(carID){\n    return fetch(`${BASE_URL}/${carID}`,{\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    }).then(res => res.json());\n}\n\nexport function getAll(){\n    return fetch(BASE_URL, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n    .then(res => res.json());\n}\n\nexport function deleteCar(carID){\n    return fetch(`${BASE_URL}/${carID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n}","import Raect from 'react';\nimport { Card,  Image} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom';\n\nexport default function CarCard({car, deleteCar, isProfile}){\n    return(\n            <Card centered key={car._id}>\n                <Card.Content>\n                    <Card.Header>{car.name ? car.name : 'Untitled'} {car.performance ? \"PRF\" : ''}</Card.Header>\n                    <Card.Description>{car.year} {car.make} {car.model} {car.submodel}</Card.Description>\n\n                    <Link to={`/cars/${car._id}`}>\n                        <Image src={car.imageURL ? `${car.imageURL}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n                    </Link>\n                    \n                    <div className=\"ui divider\"></div>\n                    \n                    {isProfile ? undefined : <button className=\"ui button\" onClick={()=>deleteCar(car._id)}>Delete</button>}\n                </Card.Content>\n            </Card>\n    )\n}","import React from 'react'\nimport { Card  } from 'semantic-ui-react'\nimport CarCard from '../CarCard/CarCard';\n\nexport default function CarGrid({cars, deleteCar, isProfile}){\n    return(\n        <Card.Group>\n            {cars.map((car) => {\n                return(\n                    <CarCard key={car._id} car={car} deleteCar={deleteCar} isProfile={isProfile}/>\n                )\n            })}\n        </Card.Group>\n    )\n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Segment } from 'semantic-ui-react';\n\nexport default function PageHeader({user, handleLogout}){\n    return (\n        <Segment clearing>\n            <Header as='h2' floated='left'>\n                <Link to=\"/\">Dashboard</Link>\n            </Header>\n            <Header as='h2' floated='right'> \n                <Link to={`/${user.username}`}>Profile </Link>          \n                <Link to='' onClick={handleLogout}>Logout</Link>\n            </Header>\n        </Segment>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport AddCarForm from '../../components/AddCarForm/AddCarForm';\nimport * as carApi from '../../utils/car-api';\nimport CarGrid from '../../components/CarGrid/CarGrid';\nimport {  Grid } from 'semantic-ui-react'\nimport PageHeader from '../../components/Header/Header';\nimport './Dashboard.css'\n\nexport default function Dashboard({user, handleLogout}){\n\n    const [cars, setCars] = useState([])\n\n    async function handleAddCar(car){\n        try{\n            const data = await carApi.create(car)\n            setCars(cars => [data.car, ...cars])\n            console.log(data.car)\n        }catch(err){\n            console.log(err, 'err')\n        }\n    }\n\n    async function deleteCar(carID){\n        try{\n            const data = await carApi.deleteCar(carID)\n            getCars()\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function getCars(){\n        try{\n            const data = await carApi.getAll();\n            console.log(data)\n            setCars([...data.cars])\n        }catch(err){\n            console.log(err, ' error')\n        }\n    }\n    \n    useEffect(() => {\n        getCars()\n    }, [])\n\n    return(\n        <>\n                <Grid centered >\n                    <Grid.Row>\n                        <Grid.Column>\n                            <PageHeader handleLogout={handleLogout} user={user}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={5}>\n                            <AddCarForm handleAddCar={handleAddCar}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={9}>\n                            <CarGrid cars={cars} deleteCar={deleteCar} isProfile={false}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n        </>\n    )\n}","import tokenService from './tokenService';\n\n\nconst BASE_URL = '/api';\n\nexport function create(performanceUpgrade, carID){\n    return fetch(`${BASE_URL}/cars/${carID}/performanceUpgrades`, {\n        method: 'POST',\n        body: JSON.stringify(performanceUpgrade),\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken(),\n            'Content-Type': 'application/json'\n          }\n    }).then(res => res.json())\n}\n\n\nexport function removePerformanceUpgrade(performanceUpgradeID){\n    return fetch(`${BASE_URL}/performanceUpgrades/${performanceUpgradeID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n    }).then(res => res.json())\n}","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/services';\n\nexport function create(service){\n    return fetch(BASE_URL, {\n        method: 'POST',\n        body: JSON.stringify(service),\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken(),\n            'Content-Type': 'application/json'\n        }\n    }).then(res => res.json())\n}\n\nexport function getAll(carID){\n    return fetch(`${BASE_URL}/${carID}`, {\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n    .then(res => res.json());\n}\n\nexport function deleteService(serviceID){\n    return fetch(`${BASE_URL}/${serviceID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n        }\n    })\n}","import React, {useState, useEffect} from 'react';\nimport { Button, Form, Grid, Header, Image,  Segment, Dropdown } from 'semantic-ui-react'\n\n\nexport default function AddCarForm(props){\n    const [selectedFile, setSelectedFile] = useState('')\n    const [checked, setChecked] = useState(props.car.performance)\n    console.log(props.car.performance)\n    const [car, setCar] = useState({\n        name: '',\n        imageURL: '',\n        performance: false\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const formData = new FormData()\n        formData.append('photo', selectedFile ? selectedFile : props.car.imageURL)\n        formData.append('name', car.name ? car.name : props.car.name)\n        formData.append('performance', checked)\n        props.handleUpdateCar(formData)\n    }\n\n    function handleChange(e) {\n        if(e.target.name === 'performance'){\n            setChecked(checked ? false : true)\n        }\n\n        setCar({\n            ...car,\n            [e.target.name]: e.target.value,\n        })\n    }\n\n    function handleFileInput(e){\n        setSelectedFile(e.target.files[0])\n      }\n\n    return(\n        <Grid>\n            <Grid.Column>\n                <Segment>\n                    <Form onSubmit={handleSubmit}>\n                        <label>Update Name</label>\n                        <input onChange={handleChange} name=\"name\" type=\"text\" placeholder=\"Name\"/>\n                        <label>Update Image</label>\n                        <input type=\"file\" name=\"photo\" onChange={handleFileInput}/>\n                        <label>Is this car a performance build? </label>\n                        <input onChange={handleChange} name=\"performance\" type=\"checkbox\" value={checked} checked={checked}/>\n                        <br/>\n                        <input required type=\"submit\" value=\"Update Car\"/>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport { Button, Form, Grid, Header, Image,  Segment, Dropdown, PopupHeader } from 'semantic-ui-react'\n\n\nexport default function AddServiceForm(props){\n    const [service, setService] = useState({\n        name: '',\n        cost: '',\n        date: '',\n        servicer: ''\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const newService = {\n            name: service.name,\n            cost: service.cost,\n            date: service.date,\n            servicer: service.servicer\n        }\n\n        props.handleAddService(newService)\n    }\n\n    function handleChange(e) {\n        setService({\n            ...service,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    return(\n        <Grid>\n            <Grid.Column>\n                <Segment>\n                    <label>Add a Service</label>\n                    <Form onSubmit={handleSubmit}>\n                        <label>Name of Service</label>\n                        <input required onChange={handleChange} name=\"name\" type=\"text\" placeholder=\"Name\"/> \n                        <label>Serviced By</label>\n                        <input required onChange={handleChange} name=\"servicer\" type=\"text\" placeholder=\"Serviced By\"/>\n                        <label>Cost of Service</label>\n                        <input required onChange={handleChange} name=\"cost\" type=\"number\" min=\"0.01\" step=\"0.01\" max=\"100000\" placeholder=\"Cost\"/>\n                        <label>Date of Service</label>\n                        <input required onChange={handleChange} name=\"date\" type=\"date\" placeholder=\"Cost\"/>\n                        <input required type=\"submit\" value=\"Add Service\"/>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    )\n}","import React, {useState} from 'react';\nimport { Table } from 'semantic-ui-react'\n\nexport default function ServicesTable({services, handleDeleteService}){\n\n    const [showUpdateService, setShowUpdateService] = useState(false)\n\n    const toggleUpdateService = () =>{\n        showUpdateService ? setShowUpdateService(false) : setShowUpdateService(true)\n    }\n\n    return(\n        <>\n            <Table>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Service</Table.HeaderCell>\n                        <Table.HeaderCell>Serviced By</Table.HeaderCell>\n                        <Table.HeaderCell>Cost</Table.HeaderCell>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        {showUpdateService ? <Table.HeaderCell>Delete</Table.HeaderCell>: undefined}\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {services.map((service) => {\n                        return(\n                            <Table.Row key={service._id}>\n                                <Table.Cell>{service.name}</Table.Cell>\n                                <Table.Cell>{service.servicer}</Table.Cell>\n                                <Table.Cell>${service.cost}</Table.Cell>\n                                <Table.Cell>{service.date.slice(0,9)}</Table.Cell>\n                                {showUpdateService ? <Table.Cell><button className=\"ui button\" onClick={()=>handleDeleteService(service._id)}>X</button></Table.Cell>: undefined}\n                            </Table.Row>\n                        )\n                    })}\n                </Table.Body>\n            </Table>\n            <button className=\"ui button\" onClick={toggleUpdateService}>Update History</button>\n        </>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport { Button, Form, Grid, Header, Image,  Segment, Dropdown, PopupHeader } from 'semantic-ui-react'\n\n\nexport default function AddPerformanceUpgradeForm(props){\n    const [performanceUpgrade, setPerformanceUpgrade] = useState({\n        part: '',\n        brand: '',\n        cost: '',\n    })\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        const newPerformanceUpgrade = {\n            part: performanceUpgrade.part,\n            brand: performanceUpgrade.brand,\n            cost: performanceUpgrade.cost,\n        }\n\n        props.handleAddPerformanceUpgrade(newPerformanceUpgrade)\n    }\n\n    function handleChange(e) {\n        setPerformanceUpgrade({\n            ...performanceUpgrade,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    return(\n        <Grid>\n            <Grid.Column>\n                <Segment>\n                    <label>Add a Performance Part</label>\n                    <Form onSubmit={handleSubmit}>\n                        <label>Part name</label>\n                        <input required onChange={handleChange} name=\"part\" type=\"text\" placeholder=\"Part Name\"/> \n                        <label>Part Brand</label>\n                        <input required onChange={handleChange} name=\"brand\" type=\"text\" placeholder=\"Part Brand\"/>\n                        <label>Part Price</label>\n                        <input required onChange={handleChange} name=\"cost\" type=\"number\" min=\"0.01\" step=\"0.01\" max=\"100000\" placeholder=\"Part Price\"/>\n                        <input required type=\"submit\" value=\"Add Part\"/>\n                    </Form>\n                </Segment>\n            </Grid.Column>\n        </Grid>\n    )\n}","import React, {useState} from 'react';\nimport { Table } from 'semantic-ui-react'\n\nexport default function PerformanceUpgradesTable({performanceUpgrades, handleDeleteUpgrade}){\n\n    const [showUpdateUpgrade, setShowUpdateUpgrade] = useState(false)\n\n    const toggleUpdateUpgrade = () =>{\n        showUpdateUpgrade ? setShowUpdateUpgrade(false) : setShowUpdateUpgrade(true)\n    }\n\n    return(\n        <>\n            <Table>\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Part</Table.HeaderCell>\n                        <Table.HeaderCell>Brand</Table.HeaderCell>\n                        <Table.HeaderCell>Cost</Table.HeaderCell>\n                        {showUpdateUpgrade ? <Table.HeaderCell>Delete</Table.HeaderCell>: undefined}\n                    </Table.Row>\n                </Table.Header>\n                <Table.Body>\n                    {performanceUpgrades.map((upgrade) => {\n                        return(\n                            <Table.Row key={upgrade._id}>\n                                <Table.Cell>{upgrade.part}</Table.Cell>\n                                <Table.Cell>{upgrade.brand}</Table.Cell>\n                                <Table.Cell>${upgrade.cost}</Table.Cell>\n                                {showUpdateUpgrade ? <Table.Cell><button className=\"ui button\" onClick={()=>handleDeleteUpgrade(upgrade._id)}>X</button></Table.Cell>: undefined}\n                            </Table.Row>\n                        )\n                    })}\n                </Table.Body>\n            </Table>\n            <button className=\"ui button\" onClick={toggleUpdateUpgrade}>Update Parts</button>\n        </>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport {useParams} from 'react-router-dom';\nimport * as carApi from '../../utils/car-api';\nimport * as performanceUpgradesApi from '../../utils/performanceUpgradesService';\nimport * as serviceApi from '../../utils/service-api';\nimport CarCard from '../../components/CarCard/CarCard';\nimport UpdateCarFrom from '../../components/UpdateCarForm/UpdateCarForm';\nimport AddServiceForm from '../../components/AddServiceForm/AddServiceForm';\nimport ServicesTable from '../../components/ServicesTable/ServicesTable';\nimport { Grid, Menu } from \"semantic-ui-react\";\nimport PageHeader from '../../components/Header/Header';\nimport './CarDetails.css'\nimport AddPerformanceUpgradeForm from '../../components/AddPerformanceUpgradeForm/AddPerformanceUpgradeForm';\nimport PerformanceUpgradesTable from '../../components/PerformanceUpgradesTable/PerformanceUpgradesTable';\n\nexport default function CarDetails({user,handleLogout}){\n    const {id} = useParams()\n    const [showUpdateForm, setShowUpdateForm] = useState(false)\n    const [showServicesTable, setShowServicesTable] = useState(true)\n    const[services, setServices] = useState([])\n    const[performanceUpgrades, setperformanceUpgrades] = useState([])\n    const [car, setCar] = useState({\n        name: '',\n        make: '',\n        model: '',\n        year: '',\n        imaegURL: '',\n        performance: false\n    })\n    \n    useEffect(() => {\n        getCar()\n        getService()\n    }, [])\n\n    async function getCar(){\n        try{\n            const data = await carApi.getOne(id)\n            setCar(data.car)\n            setperformanceUpgrades([...data.car.performanceUpgrades])\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function updateCar(carForm){\n        try{\n            const data = await carApi.update(carForm, id)\n            getCar()\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function handleAddService(newService){\n        try{\n            const fullService = {\n                car: car,\n                name: newService.name,\n                servicer: newService.servicer,\n                cost: newService.cost,\n                date: newService.date\n            }\n            const data = await serviceApi.create(fullService)\n            setServices([...services, data.service])\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function handleDeleteService(serviceId){\n        try{\n            const data = await serviceApi.deleteService(serviceId)\n            getService()\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function getService(){\n        try{\n            const data = await serviceApi.getAll(id)\n            setServices([...data.services])\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function handleAddPerformanceUpgrade(newPerformanceUpgrade){\n        try{\n            const data = await performanceUpgradesApi.create(newPerformanceUpgrade, id)\n            getCar()\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    async function handleRemovePerformanceUpgrade(performanceUpgradeId){\n        try{\n            const data = await performanceUpgradesApi.removePerformanceUpgrade(performanceUpgradeId)\n            getCar()\n        }catch(err){\n            console.log(err)\n        }\n    }\n\n    const toggleUpdateForm = () =>{\n        showUpdateForm ? setShowUpdateForm(false) : setShowUpdateForm(true)\n    }\n\n    const handleShowServicesTable = (show) =>{\n        show ? setShowServicesTable(false) : setShowServicesTable(true)\n    }\n\n    return(\n        <>\n                <Grid centered divided>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <PageHeader handleLogout={handleLogout} user={user}/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row columns={car.performance ? 3 : 2}>\n                       {car.performance ? \n                        <Grid.Column width={5}>\n                            Stats Table\n                        </Grid.Column>\n                        : undefined}\n                        <Grid.Column width={5} textAlign='center'>\n                            <CarCard car={car} isProfile={true}/>\n                            <button className=\"ui button\" onClick={toggleUpdateForm}>Update</button>\n                            {showUpdateForm ? <UpdateCarFrom car={car} handleUpdateCar={updateCar}/> : \"\"}\n                        </Grid.Column>\n                        <Grid.Column width={5}>\n                            {showServicesTable ?\n                                <AddServiceForm handleAddService={handleAddService}/>\n                                :\n                                <AddPerformanceUpgradeForm handleAddPerformanceUpgrade={handleAddPerformanceUpgrade}/>\n                            }\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column width={10} textAlign='center'>\n                        {car.performance ?\n                            <Menu pointing secondary>\n                                <Menu.Item name='Services' onClick={()=>handleShowServicesTable(false)}/>\n                                <Menu.Item name='Performance' onClick={()=>handleShowServicesTable(true)}/>\n                            </Menu>\n                            : undefined}\n                            {showServicesTable ? \n                                <ServicesTable services={services} handleDeleteService={handleDeleteService}/>\n                                :\n                                <PerformanceUpgradesTable performanceUpgrades={performanceUpgrades} handleDeleteUpgrade={handleRemovePerformanceUpgrade}/>\n                            }\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n        </>\n    )\n}","import React from 'react';\nimport * as d3 from 'd3';\n\nexport default function BubbleChart({width, height, radius}){\n    return(\n        <svg>\n            <circle \n                cx={width}\n                cy={height}\n                r={radius}\n                fill=\"blue\"\n            />\n        </svg>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport { Grid, Image } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport PageHeader from '../../components/Header/Header';\nimport { useLocation } from 'react-router-dom';\nimport BubbleChart from '../../components/BubbleChart/BubbleChart';\n\nexport default function ProfilePage({user,handleLogout}){\n\n    const [profileUser, setProfileUser] = useState({})\n\n    const location = useLocation()\n\n    async function getProfile() {\n        try {\n\n            const username = location.pathname.substring(1)\n            // location.pathname returns /jimbo so we need to cut off the / using the js method substring\n            // This gets the username from the url! \n            console.log(username)\n            const data = await userService.getProfile(username);\n            console.log(data)\n            setProfileUser(() => data.user)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    useEffect(() => {\n        getProfile()\n\n    }, [])\n\n    return(\n        <Grid centered >\n            <Grid.Row>\n                <Grid.Column>\n                    <PageHeader handleLogout={handleLogout} user={user}/>\n                </Grid.Column>\n            </Grid.Row>\n            <h1>{profileUser.username}</h1>\n            <Image src={profileUser.photoUrl ? `${profileUser.photoUrl}` : 'https://react.semantic-ui.com/images/wireframe/square-image.png'} />\n            <Grid.Row>\n                <Grid.Column width={3}>\n                    <BubbleChart width={150} height={77} radius={40}/>\n                </Grid.Column>\n            </Grid.Row>\n        </Grid>\n    )\n}","import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport Dashboard from '../Dashboard/Dashboard';\nimport CarDetails from '../CarDetails/CarDetails';\nimport ProfilePage from '../ProfilePage/ProfilePage';\n\n\nfunction App() {\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? \n            <> \n             <Switch>\n                <Route exact path=\"/\">\n                    <Dashboard handleLogout={handleLogout} user={user}/>\n                </Route>\n                <Route path=\"/cars/:id\">\n                  <CarDetails handleLogout={handleLogout} user={user}/>\n                </Route>\n                <Route path=\"/:username\">\n                  <ProfilePage handleLogout={handleLogout} user={user}/>\n                </Route>\n            </Switch>\n            </>\n            :\n            <Redirect to='/login'/>\n          }\n  \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}